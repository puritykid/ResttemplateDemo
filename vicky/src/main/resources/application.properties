spring.application.name=demo


＃是否启用连接池
com.cfcc.distribute.restpool.enabled=true
＃连接创建超时，connectTimeout单位为毫秒
com.cfcc.distribute.restpool.connectTimeout=2000
＃读超时，服务收到请求，但在一段时间内未处理完成，导致超时，单位毫秒
com.cfcc.distribute.restpool.readTimeout=4000
＃连接创建后，空闲时间，过期重建，单位秒
com.cfcc.distribute.restpool.poolingHttpClientConnectionManager=50
#整个连接池最大连接数
com.cfcc.distribute.restpool.maxTotal=500
＃每个路由最大并发连接数
com.cfcc.distribute.restpool.defaultMaxPerRoute=100
＃请求重试次数
com.cfcc.distribute.restpool.retryHandler=5
＃请求等待连接池获取连接的时间，单位毫秒
com.cfcc.distribute.restpool.connectRequestTimeout=500 
＃大文件传输时，需要设置false
com.cfcc.distribute.restpool.bufferRequestBody=true



＃是否启用连接池
com.cfcc.distribute.restpool.async.enabled=true
＃连接创建超时，connectTimeout单位为毫秒
com.cfcc.distribute.restpool.async.connectTimeout=2000
＃读超时，服务收到请求，但在一段时间内未处理完成，导致超时，单位毫秒
com.cfcc.distribute.restpool.async.readTimeout=4000
＃连接创建后，空闲时间，过期重建，单位秒
com.cfcc.distribute.restpool.async.poolingHttpClientConnectionManager=50
#整个连接池最大连接数
com.cfcc.distribute.restpool.async.maxTotal=500
＃每个路由最大并发连接数
com.cfcc.distribute.restpool.async.defaultMaxPerRoute=100
＃请求重试次数
com.cfcc.distribute.restpool.async.retryHandler=5
＃请求等待连接池获取连接的时间，单位毫秒
com.cfcc.distribute.restpool.async.connectRequestTimeout=500 
＃大文件传输时，需要设置false
com.cfcc.distribute.restpool.async.bufferRequestBody=true




server.port=9091

server.tomcat.max-connections=200
server.tomcat.max-threads=300
server.tomcat.accept-count=100
server.host=http://DEMO/

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.perferIpAddress=true
spring.cloud.loadbalancer.retry=true

#eureka.instance.leaseRenewalIntervalInSeconds＝10
#eureka.client.registryFetchIntervalSeconds＝10
#ribbon.serverListRefreshInterval＝10

#它会在本地缓存所有实例注册信息,避免每次调用服务请求都需要向Eureka Server获取服务实例的注册信息
＃eureka.client.fetchRegistry=true
#保证缓存数据的有效性，它会定时向注册中心更新实例
＃eureka.client.registry-fetch-interval-seconds=5
＃eureka.client.instance-info-replication-interval-seconds=5
＃eureka.client.eureka-service-url-poll-interval-seconds=60
#客户端从Eureka Server集群里更新Eureka Server信息的频率
＃eureka.instance.lease-renewal-interval-in-seconds=20
